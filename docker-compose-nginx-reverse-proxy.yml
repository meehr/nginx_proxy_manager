version: "3.9"

volumes:
  npm-data:
  npm-ssl:
  npm-db:

networks:
  frontend:
    # add this if the network is already existing!
    # external: true
  backend:
    # add this if the network is already existing!
    # external: true
    
services:
  npm-app:
    image: jc21/nginx-proxy-manager:latest
    container_name: nginx-proxy-app
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: ${hard_limit}
        reservations:
          memory: ${soft_limit}
    depends_on:
      - npm-db
    ports:
      - "80:80"
      - "81:81"
      - "443:443"
    healthcheck:
      test: ["CMD", "/bin/check-health"]
      interval: 10s
      timeout: 3s
    environment:
      DB_MYSQL_HOST: ${DB_MYSQL_HOST}
      DB_MYSQL_PORT: ${DB_MYSQL_PORT}
      DB_MYSQL_USER: ${DB_MYSQL_USER}
      DB_MYSQL_PASSWORD: ${DB_MYSQL_PASSWORD}
      DB_MYSQL_NAME: ${DB_MYSQL_NAME}
    volumes:
      - npm-data:/data
      - npm-ssl:/etc/letsencrypt
    networks:
      - frontend
      - backend

  npm-db:
    image: yobasystems/alpine-mariadb:latest
    container_name: nginx-proxy-db
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 200M
        reservations:
          memory: 100M
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_MYSQL_NAME}
      MYSQL_USER: ${DB_MYSQL_USER}
      MYSQL_PASSWORD: ${DB_MYSQL_PASSWORD}
    ports:
      - ${DB_MYSQL_PORT}:3306
    healthcheck:
      test: ["CMD", "mysqladmin", "-u", "${DB_MYSQL_USER}", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5 
    volumes:
      - npm-db:/var/lib/mysql
    networks:
      - backend
